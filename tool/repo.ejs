<html>
<% include ./header %>

<body>
<% include ./commandbar %>

<div class="col-lg-6 grid-margin stretch-card">
<div class="card">
<h4 class="card-title">Repositories</h4>
<div class="card-body" id="cardbody_repo">
<% for(var key of Object.keys(page[1])){ %>
<div class="card">
  <div class="card-header" role="tab" id="heading-<%= key %>">
    <h5 class="mb-0">
    	<table style="width:100%" border=5>
    	<tr>
            <td align=left><%= key %></td>
            <td align=right>
                <button disabled onclick="click_repo_reset('<%=key%>');" id="btn-repo-reset-<%=key%>" class="btn btn-sm btn-primary mr-2">Cancel</button>
                <button disabled onclick="click_repo_apply('<%=key%>');" id="btn-repo-apply-<%=key%>" class="btn btn-sm btn-primary mr-2">Apply</button>
<%      var bDeletePossible = true;
        var jobs = page[2];
        for(var k in jobs){
            console.log ( jobs[k] );
            console.log(jobs[k].from , key , jobs[k].to);
            if(jobs[k].from == key || jobs[k].to == key)
            {
                bDeletePossible = false;
                break;
            }
        }
        if(bDeletePossible == true) { %>         
                <button onclick="delete_Repo('<%=key%>', '<%=JSON.stringify(page[2], null, 2)%>');" class="btn btn-sm btn-outline-dark">Delete</button>
    <%  } %>
            </td>
    	</tr>
        <tr><td colspan=2><hr></td></tr>
    	<tr>
            <td><input type="text" class="form-control" disable id="repo_name_<%=key%>" value="<%= page[1][key].name %>"></td>
            <td><input type="text" class="form-control" disable id="repo_type_<%=key%>" value="<%= page[1][key].type %>"></td>
        </tr>
    	<tr><td colspan=2><hr></td></tr>
    	<% if(page[1][key].config !== undefined) { %>
		<tr><td colspan=2>
            <div class="form-group">
              <textarea class="form-control" id="repo_ta_<%=key%>" oninput="modified_repo('<%=key%>');" rows=7><%= JSON.stringify(page[1][key].config, null, 2); %></textarea>
            </div>
		</td></tr>
        <% }else if(page[1][key].type == 'redis'){ %>
        <tr><td>IP</td><td><input type="text" class="form-control" oninput="modified_repo('<%=key%>');" id="repo_redis_ip_<%=key%>" value="<%= page[1][key].ip %>"></td></tr>
        <tr><td>PORT</td><td><input type="text" class="form-control" oninput="modified_repo('<%=key%>');" id="repo_redis_port_<%=key%>" value="<%= page[1][key].port %>"></td></tr>
    	<% } %>

        <% if(page[1][key].type == 's3'){ %>
        <tr><td>Bucket Name</td><td><input type="text" class="form-control" oninput="modified_repo('<%=key%>');" id="txt_repo_s3bucket_<%=key%>" value="<%= page[1][key]['s3param'].Bucket %>"></td></tr>
        <tr><td>Key</td><td><input type="text" class="form-control" oninput="modified_repo('<%=key%>');" id="txt_repo_s3bucket_key_<%=key%>" value="<%= page[1][key]['s3param'].Key %>"></td></tr>
        <% } %>
        </table>
    </h5>
  </div>
</div>
<br>
<% } %> 
<div class="card">
  <div class="card-header" role="tab">
    <h5 class="mb-0">
        <div id="New_Repo">
        <center> <button onclick="Add_Repo();" class="btn btn-sm btn-primary">New Repogitory</button></center>
        </div>
    </h5>
  </div>
</div>

</div>
</div>

<div class="card">
<h4 class="card-title">Jobs</h4>
<div class="card-body" id="cardbody_job">
<% for(var key of Object.keys(page[2])){ %>
<div class="card">
  <div class="card-header" role="tab" id="heading-<%= key %>">
    <h5 class="mb-0">
        <table style="width:100%" border=5>
        <tr>
        <td align=left><%= key %></td>
        <td align=right>
            <button disabled onclick="click_job_reset('<%=key%>');" id="btn-job-reset-<%=key%>" class="btn btn-sm btn-primary mr-2">Cancel</button>
            <button disabled onclick="click_job_apply('<%=key%>');" id="btn-job-apply-<%=key%>" class="btn btn-sm btn-primary mr-2">Apply</button>
            <button onclick="delete_Job('<%=key%>');" class="btn btn-sm btn-outline-dark">Delete</button>
        </td>
        </tr>
        <tr><td colspan=2><hr></td></tr>
        <% if(page[2][key] !== undefined) { %>
        <tr><td colspan=2>
            <div class="form-group">
              <textarea class="form-control" id="job_ta_<%=key%>" oninput="modified_job('<%=key%>');" rows=7><%= JSON.stringify(page[2][key], null, 2); %></textarea>
            </div>
        </td></tr>
        <% } %>
        </table>
    </h5>
  </div>
</div>
<br>
<% } %>
<div class="card">
  <div class="card-header" role="tab" id="heading-<%= key %>">
    <h5 class="mb-0">
        <div id="New_Job">
        <center> <button onclick="Add_Job();" class="btn btn-sm btn-primary">New Job</button></center>
        </div>
    </h5>
  </div>
</div>

</div>
</div>


</div>

<center>
<button disabled onclick="click_upload();" id="id_repo_job" class="btn btn-sm btn-primary mr-2">Upload</button>
</center>


<!-- The Modal -->
<div id="repoModal" class="modal">
  <!-- Modal content -->
  <div class="modal-content">
    <span class="close">&times;</span>
    TYPE : <select id="repo_type" onchange="repo_change();">
        <option value="mssql">MSSQL</option>
        <option value="mysql">MySQL</option>
        <option value="redis">REDIS</option>
        <option value="es">Elasticsearch</option>
        <option value="s3">AWS S3</option>
        <option value="file" selected="selected">File</option>
    </select>
    <br>
    NAME : <input type="text" class="form-control" id="repo_name">
    <br>
    <p hidden id="repo_ip_area">IP : <input type="text" class="form-control" id="repo_ip"></p>
    <p hidden id="repo_port_area">PORT : <input type="text" class="form-control" id="repo_port"></p>
    <p hidden id="repo_bucketname_area">BUCKET NAME : <input type="text" class="form-control" id="repo_bucketname"></p>
    <p hidden id="repo_key_area">ACCESS KEY : <input type="text" class="form-control" id="repo_key"></p>
    <p id="repo_config_area">CONFIG : <textarea class="form-control" id="repo_config" rows=7></textarea></p>

    <button onclick="new_repo_cancel();" class="btn btn-sm btn-primary mr-2">Cancel</button>
    <button onclick="new_repo_add();" class="btn btn-sm btn-primary mr-2">ADD</button>
  </div>
</div>

<!-- The Modal -->
<div id="jobModal" class="modal">

  <!-- Modal content -->
  <div class="modal-content">
    <span class="close">&times;</span>
    NAME : <input type="text" class="form-control" id="job_name">
    <br>
    <p id="job_scehdule_area">Schedule : <input type="text" class="form-control" id="job_scehdule"></p>
    <p id="job_from_area">From : <select id="job_from" >
    <% for(var key of Object.keys(page[1])){ %>        
        <option value="<%=page[1][key].name%>"><%=page[1][key].name%></option>
    <% } %>
    </select></p>
    <p id="job_getquery_area">get_query : <textarea class="form-control" id="job_getquery" rows=4></textarea></p>
    <p id="job_getqueryparam_area">parameters for get_query : <textarea class="form-control" id="job_getquery_param" rows=4></textarea></p>
    <p id="job_to_area">From : <select id="job_to" >
    <% for(var key of Object.keys(page[1])){ %>        
        <% if(page[1][key].type == "s3" ) continue; %>
        <option value="<%=page[1][key].name%>"><%=page[1][key].name%></option>
    <% } %>
    </select></p>
    <p id="job_setquery_area">set_query : <textarea class="form-control" id="job_setquery" rows=4></textarea></p>
    <p id="job_setqueryparam_area">parameters for set_query : <textarea class="form-control" id="job_setquery_param" rows=4></textarea></p>

    <button onclick="new_job_cancel();" class="btn btn-sm btn-primary mr-2">Cancel</button>
    <button onclick="new_job_add();" class="btn btn-sm btn-primary mr-2">ADD</button>
  </div>
</div>


</body>

<script>
    const modifyFlag = {};
    var repojobApply = {};

    function clearSpecialCharacter(_string){
        _string = _string.replace(/\s+/,"");
        _string = _string.replace(/\s+$/g,"");
        _string = _string.replace(/\n/g,"");
        _string = _string.replace(/\r/g,"");

        return _string;
    }

    function isJson(_string){
        if (typeof _string === 'object')
        {
            var str = JSON.stringify(_string);
            if (/^[\],:{}\s]*$/.test(str.replace(/\\["\\\/bfnrtu]/g, '@').
                replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']').
                replace(/(?:^|:|,)(?:\s*\[)+/g, ''))) 
            {
                return true;
            }else{
                return false;
            }
        }
        if (/^[\],:{}\s]*$/.test(_string.replace(/\\["\\\/bfnrtu]/g, '@').
            replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']').
            replace(/(?:^|:|,)(?:\s*\[)+/g, ''))) 
        {
            return true;
        }else{
            return false;
        }
    }

    function delete_Repo(key){
        //  check if this repo is in use at a job.
        if (confirm('Are you sure you want to save this thing into the database?')) {
            console.log(" SEND DELETE REPO ", key);
            post('/delete_repo', {"name" : key}, "post" );
        } else {
            // Do nothing!
        }
    }

    function delete_Job(key){
        //  check if this repo is in use at a job.
        if (confirm('Are you sure you want to save this thing into the database?')) {
            console.log(" SEND DELETE JOB ", key);
            post('/delete_job', {"name":key}, "post" );
        } else {
            // Do nothing!
        }
    }

    function modified_repo(key){
        var btnId = 'btn-repo-apply-'+key;
        document.getElementById(btnId).disabled = false;

        var btnResetId = 'btn-repo-reset-'+key;
        document.getElementById(btnResetId).disabled = false;
    }

    function modified_job(key){
        var btnId = 'btn-job-apply-'+key;
        document.getElementById(btnId).disabled = false;

        var btnResetId = 'btn-job-reset-'+key;
        document.getElementById(btnResetId).disabled = false;
    }

    function click_job_reset(key){
        var job_ta_id = "job_ta_"+key;
        if(document.getElementById(job_ta_id) !== null){
            document.getElementById(job_ta_id).value = document.getElementById(job_ta_id).defaultValue;
            
            if(repojobApply["job"] != undefined && repojobApply["job"][key] != undefined){
                delete repojobApply["job"][key];
                if(Object.keys(repojobApply["job"]).length ==0)
                    delete repojobApply["job"];
            }
        }
    }

    function click_job_apply(key){
        if(repojobApply["job"] === undefined){
            repojobApply["job"] = {};
        }
        if(repojobApply["job"][key] === undefined){
            repojobApply["job"][key] = {};
        }

        var job_ta = "job_ta_"+key;
        if(document.getElementById(job_ta) !== null)
            repojobApply["job"][key] = clearSpecialCharacter(document.getElementById(job_ta).value);

        document.getElementById('id_repo_job').disabled = false;
    }

    function click_repo_reset(key){
        var repo_ta_id = "repo_ta_"+key;
        if(document.getElementById(repo_ta_id) !== null){
            document.getElementById(repo_ta_id).value = document.getElementById(repo_ta_id).defaultValue;
            if(repojobApply["repo"] != undefined && repojobApply["repo"][key] != undefined && repojobApply["repo"][key]["config"] != undefined){
                delete repojobApply["repo"][key]["config"];
                if(Object.keys(repojobApply["repo"][key]).length ==0)
                    delete repojobApply["repo"][key];
            }
        }

        var repo_ip = "repo_redis_ip_" + key;
        if(document.getElementById(repo_ip) !== null){
            document.getElementById(repo_ip).value = document.getElementById(repo_ip).defaultValue;
            if(repojobApply["repo"] != undefined && repojobApply["repo"][key] != undefined && repojobApply["repo"][key]["ip"] != undefined){
                delete repojobApply["repo"][key]["ip"];
                if(Object.keys(repojobApply["repo"][key]).length ==0)
                    delete repojobApply["repo"][key];
            }
        }

        var repo_port = "repo_redis_port_" + key;
        if(document.getElementById(repo_port) !== null){
            document.getElementById(repo_port).value = document.getElementById(repo_port).defaultValue;
            if(repojobApply["repo"] != undefined && repojobApply["repo"][key] != undefined && repojobApply["repo"][key]["port"] != undefined){
                delete repojobApply["repo"][key]["port"];
                if(Object.keys(repojobApply["repo"][key]).length ==0)
                    delete repojobApply["repo"][key];
            }
        }

        var btnId = 'btn-repo-apply-'+key;
        document.getElementById(btnId).disabled = true;

        var btnResetId = 'btn-repo-reset-'+key;
        document.getElementById(btnResetId).disabled = true;
    }

    function click_repo_apply(key){
        if(repojobApply["repo"] === undefined){
            repojobApply["repo"] = {};
        }
        if(repojobApply["repo"][key] === undefined){
            repojobApply["repo"][key] = {};
        }

        var name = "repo_name_" + key;
        var type = "repo_type_" + key;
        var repo_ta_id = "repo_ta_"+key;
        repojobApply["repo"][key]["name"] = document.getElementById(name).value;
        repojobApply["repo"][key]["type"] = document.getElementById(type).value;

        if(document.getElementById(repo_ta_id) !== null){
            repojobApply["repo"][key]["config"] = document.getElementById(repo_ta_id).value;
        }

        //  redis라면 ip,port
        var repo_ip = "repo_redis_ip_" + key;
        if(document.getElementById(repo_ip) !== null)
            repojobApply["repo"][key]["ip"] = document.getElementById(repo_ip).value;

        var repo_port = "repo_redis_port_" + key;
        if(document.getElementById(repo_port) !== null)
            repojobApply["repo"][key]["port"] = document.getElementById(repo_port).value;

        document.getElementById('id_repo_job').disabled = false;
    }

    function click_upload(){
        if(Object.keys(repojobApply).length > 0)
            post('/save_repojob/', repojobApply, "post" );
        else{
            console.log(" Nothing to upload!");
        }
    }

    var repoModal = document.getElementById("repoModal");
    function Add_Repo(){
        repoModal.style.display = "block";
        document.getElementById("repo_name").value = "";
        document.getElementById("repo_ip").value = "";
        document.getElementById("repo_port").value = "";
        document.getElementById("repo_bucketname").value = "";
        document.getElementById("repo_key").value = "";
        document.getElementById("repo_config").value = "";
    }

    function repo_change(){
        var e = document.getElementById("repo_type");
        var type = e.options[e.selectedIndex].value;
        console.log( type );

        if(type == "mssql"){
            document.getElementById("repo_ip_area").hidden = true;
            document.getElementById("repo_port_area").hidden = true;
            document.getElementById("repo_bucketname_area").hidden = true;
            document.getElementById("repo_key_area").hidden = true;
            document.getElementById("repo_config_area").hidden = false;
        }else if(type == "mysql"){
            document.getElementById("repo_ip_area").hidden = true;
            document.getElementById("repo_port_area").hidden = true;
            document.getElementById("repo_bucketname_area").hidden = true;
            document.getElementById("repo_key_area").hidden = true;
            document.getElementById("repo_config_area").hidden = false;
        }else if(type == "redis"){
            document.getElementById("repo_ip_area").hidden = false;
            document.getElementById("repo_port_area").hidden = false;
            document.getElementById("repo_bucketname_area").hidden = true;
            document.getElementById("repo_key_area").hidden = true;
            document.getElementById("repo_config_area").hidden = true;
        }else if(type == "es"){
            document.getElementById("repo_ip_area").hidden = true;
            document.getElementById("repo_port_area").hidden = true;
            document.getElementById("repo_bucketname_area").hidden = true;
            document.getElementById("repo_key_area").hidden = true;
            document.getElementById("repo_config_area").hidden = false;
        }else if(type == "s3"){
            document.getElementById("repo_ip_area").hidden = true;
            document.getElementById("repo_port_area").hidden = true;
            document.getElementById("repo_bucketname_area").hidden = false;
            document.getElementById("repo_key_area").hidden = false;
            document.getElementById("repo_config_area").hidden = true;
        }else if(type == "file"){
            document.getElementById("repo_ip_area").hidden = true;
            document.getElementById("repo_port_area").hidden = true;
            document.getElementById("repo_bucketname_area").hidden = true;
            document.getElementById("repo_key_area").hidden = true;
            document.getElementById("repo_config_area").hidden = false;
        }
    }

    function new_repo_cancel(){
        repoModal.style.display = "none";
    }

    function new_repo_add(){
        var data = {};
        var e = document.getElementById("repo_type");
        data["type"] = e.options[e.selectedIndex].value;
        data["name"] = document.getElementById("repo_name").value;
        if(data["type"] == "mssql"){
            data["config"] = document.getElementById("repo_config").value;
        }else if(data["type"] == "mysql"){
            data["config"] = document.getElementById("repo_config").value;
        }else if(data["type"] == "es"){
            data["config"] = document.getElementById("repo_config").value;
        }else if(data["type"] == "file"){
            data["config"] = document.getElementById("repo_config").value;
        }else if(data["type"] == "redis"){
            data["ip"] = document.getElementById("repo_ip").value;
            data["port"] = document.getElementById("repo_port").value;
        }else if(data["type"] == "s3"){
            data["Bucket"] = document.getElementById("repo_bucketname").value;
            data["Key"] = document.getElementById("repo_key").value;
        }
        data["config"] = clearSpecialCharacter(data["config"]);
        console.log( data );
        post('/add_repo', data, "post" );
    }

    var jobModal = document.getElementById("jobModal");
    function Add_Job(){
        jobModal.style.display = "block";
    }
    function new_job_cancel(){
        jobModal.style.display = "none";
    }
    function new_job_add(){
        var data = {};
        var name = document.getElementById("job_name").value;
        data[name] = {};
        data[name]["schedule"] = document.getElementById("job_scehdule").value;
        
        var f = document.getElementById("job_from");
        data[name]["from"] = f.options[f.selectedIndex].value;
        data[name]["get_query"] = clearSpecialCharacter(document.getElementById("job_getquery").value);
        var get_param = clearSpecialCharacter(document.getElementById("job_getquery_param").value);
        if(get_param.length > 0)
            data[name]["get_query_param"] = get_param;
        
        var t = document.getElementById("job_to");
        data[name]["to"] = t.options[t.selectedIndex].value;
        data[name]["set_query"] = clearSpecialCharacter(document.getElementById("job_setquery").value);
        var set_param = clearSpecialCharacter(document.getElementById("job_setquery_param").value);
        if(set_param.length > 0)
            data[name]["set_query_param"] = set_param;

        console.log( data );

        post('/add_job', data, "post" );
    }    

    function post(path, params, method='post') {
        // The rest of this code assumes you are not using a library.
        // It can be made less wordy if you use one.
        const form = document.createElement('form');
        form.method = method;
        form.action = path;

        for (const key in params) {
            if (params.hasOwnProperty(key)) {
                const hiddenField = document.createElement('input');
                hiddenField.type = 'hidden';
                hiddenField.name = key;
                if(typeof params[key] !== null){
                    if(isJson(params[key]) && typeof params[key] === 'object')
                        hiddenField.value = JSON.stringify(params[key], null, 2);
                    else
                        hiddenField.value = params[key];

                    form.appendChild(hiddenField);

                    var btnId = 'btn-repo-apply-'+key;
                    if(document.getElementById(btnId) !== null)
                        document.getElementById(btnId).disabled = true;
                    else
                        console.log(" NO ",btnId);

                    var btnResetId = 'btn-repo-reset-'+key;
                    if(document.getElementById(btnResetId) !== null)
                        document.getElementById(btnResetId).disabled = true;
                    else
                        console.log(" NO ",btnResetId);
                }
            }
        }

        document.body.appendChild(form);
        form.submit();
        document.body.removeChild(form);

        repojobApply = {};
        document.getElementById('id_repo_job').disabled = true;
    }
</script>

</html>